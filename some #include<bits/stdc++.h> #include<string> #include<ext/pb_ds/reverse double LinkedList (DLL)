struct node{
    int data;
    node* next;
    node* back;
    node(int val){
        data=val;
        next= nullptr;
        back= nullptr;
    }
    node(int val,node*n,node*nn){
        data=val;
        next= n;
        back=nn;
    }
};
node* create(vector<int>&v){
    node*head=new node(v[0]);
    node*temp=head;
    for(int i=1;i<v.size();i++){
        node*a=new node(v[i]);
        temp->next=a;
        a->back=temp;
        temp=a;
    }
    return head;
}
node* reverselinkedlist(node*head){
    if(head==NULL||head->next==NULL)return head;
    node*temp=head;
    node*prev= nullptr;
    while (temp){
        prev=temp->back;
        temp->back=temp->next;
        temp->next=prev;
        temp=temp->back;
    }
    return prev->back;
}
void print(node* head){
    node* temp=head;
    while(temp){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
void interstaller(){
    vector<int>v={1,2,3,4,5};
    node *head= create(v);
    head= reverselinkedlist(head);
    print(head);
}
